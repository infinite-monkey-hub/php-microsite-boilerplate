##########################################
# PHP Microsite Boilerplate nginx config #
##########################################

# Important Notice: 
# This is more or less highly experimental, since the nginx conf is extremely powerful and with great power comes great responsibility. 
# Therefore, it is not really possible to have a cover-all-user-cases scheme here. 
# Feel free to propose any optimization via GitHub!


http {


  # 7G FIREWALL - NGINX v1.4
  # @ https://perishablepress.com/7g-firewall/
  # @ https://perishablepress.com/7g-firewall-nginx/
  map $query_string $bad_querystring_7g {	
    default 0;	
    "~*([a-z0-9]{2000,})" 1;
    "~*(/|%2f)(:|%3a)(/|%2f)" 2;
    "~*(order(\s|%20)by(\s|%20)1--)" 3;
    "~*(/|%2f)(\*|%2a)(\*|%2a)(/|%2f)" 4;
    "~*(`|<|>|\^|\|\\|0x00|%00|%0d%0a)" 5;
    "~*(ckfinder|fck|fckeditor|fullclick)" 6;
    "~*(cmd|command)(=|%3d)(chdir|mkdir)(.*)(x20)" 7;
    "~*(globals|mosconfig([a-z_]{1,22})|request)(=|\[)" 8;
    "~*(/|%2f)((wp-)?config)((\.|%2e)inc)?((\.|%2e)php)" 9;
    "~*(thumbs?(_editor|open)?|tim(thumbs?)?)((\.|%2e)php)" 10;
    "~*(absolute_|base|root_)(dir|path)(=|%3d)(ftp|https?)" 11;
    "~*(localhost|loopback|127(\.|%2e)0(\.|%2e)0(\.|%2e)1)" 12;
    "~*(s)?(ftp|inurl|php)(s)?(:(/|%2f|%u2215)(/|%2f|%u2215))" 13;
    "~*(\.|20)(get|the)(_|%5f)(permalink|posts_page_url)(\(|%28)" 14;
    "~*((boot|win)((\.|%2e)ini)|etc(/|%2f)passwd|self(/|%2f)environ)" 15;
    "~*(((/|%2f){3,3})|((\.|%2e){3,3})|((\.|%2e){2,2})(/|%2f|%u2215))" 16;
    "~*(benchmark|char|exec|fopen|function|html)(.*)(\(|%28)(.*)(\)|%29)" 17;
    "~*(php)([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})" 18;
    "~*(e|%65|%45)(v|%76|%56)(a|%61|%31)(l|%6c|%4c)(.*)(\(|%28)(.*)(\)|%29)" 19;
    "~*(/|%2f)(=|%3d|$&|_mm|cgi(\.|-)|inurl(:|%3a)(/|%2f)|(mod|path)(=|%3d)(\.|%2e))" 20;
    "~*(<|%3c)(.*)(e|%65|%45)(m|%6d|%4d)(b|%62|%42)(e|%65|%45)(d|%64|%44)(.*)(>|%3e)" 21;
    "~*(<|%3c)(.*)(i|%69|%49)(f|%66|%46)(r|%72|%52)(a|%61|%41)(m|%6d|%4d)(e|%65|%45)(.*)(>|%3e)" 22;
    "~*(<|%3c)(.*)(o|%4f|%6f)(b|%62|%42)(j|%4a|%6a)(e|%65|%45)(c|%63|%43)(t|%74|%54)(.*)(>|%3e)" 23;
    "~*(<|%3c)(.*)(s|%73|%53)(c|%63|%43)(r|%72|%52)(i|%69|%49)(p|%70|%50)(t|%74|%54)(.*)(>|%3e)" 24;
    "~*(\+|%2b|%20)(d|%64|%44)(e|%65|%45)(l|%6c|%4c)(e|%65|%45)(t|%74|%54)(e|%65|%45)(\+|%2b|%20)" 25;
    "~*(\+|%2b|%20)(i|%69|%49)(n|%6e|%4e)(s|%73|%53)(e|%65|%45)(r|%72|%52)(t|%74|%54)(\+|%2b|%20)" 26;
    "~*(\+|%2b|%20)(s|%73|%53)(e|%65|%45)(l|%6c|%4c)(e|%65|%45)(c|%63|%43)(t|%74|%54)(\+|%2b|%20)" 27;
    "~*(\+|%2b|%20)(u|%75|%55)(p|%70|%50)(d|%64|%44)(a|%61|%41)(t|%74|%54)(e|%65|%45)(\+|%2b|%20)" 28;
    "~*(\\x00|(\"|%22|\'|%27)?0(\"|%22|\'|%27)?(=|%3d)(\"|%22|\'|%27)?0|cast(\(|%28)0x|or%201(=|%3d)1)" 29;
    "~*(g|%67|%47)(l|%6c|%4c)(o|%6f|%4f)(b|%62|%42)(a|%61|%41)(l|%6c|%4c)(s|%73|%53)(=|\[|%[0-9A-Z]{0,2})" 30;
    "~*(_|%5f)(r|%72|%52)(e|%65|%45)(q|%71|%51)(u|%75|%55)(e|%65|%45)(s|%73|%53)(t|%74|%54)(=|\[|%[0-9A-Z]{2,})" 31;
    "~*(j|%6a|%4a)(a|%61|%41)(v|%76|%56)(a|%61|%31)(s|%73|%53)(c|%63|%43)(r|%72|%52)(i|%69|%49)(p|%70|%50)(t|%74|%54)(:|%3a)(.*)(;|%3b|\)|%29)" 32;
    "~*(b|%62|%42)(a|%61|%41)(s|%73|%53)(e|%65|%45)(6|%36)(4|%34)(_|%5f)(e|%65|%45|d|%64|%44)(e|%65|%45|n|%6e|%4e)(c|%63|%43)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(.*)(\()(.*)(\))" 33;
    "~*(@copy|\$_(files|get|post)|allow_url_(fopen|include)|auto_prepend_file|blexbot|browsersploit|(c99|php)shell|curl(_exec|test)|disable_functions?|document_root|elastix|encodeuricom|exploit|fclose|fgets|file_put_contents|fputs|fsbuff|fsockopen|gethostbyname|grablogin|hmei7|input_file|null|open_basedir|outfile|passthru|phpinfo|popen|proc_open|quickbrute|remoteview|root_path|safe_mode|shell_exec|site((.){0,2})copier|sux0r|trojan|user_func_array|wget|xertive)" 34;
    "~*(;|<|>|\'|\"|\)|%0a|%0d|%22|%27|%3c|%3e|%00)(.*)(/\*|alter|base64|benchmark|cast|char|concat|convert|create|encode|declare|delete|drop|insert|md5|request|script|select|set|union|update)" 35;
    "~*((\+|%2b)(concat|delete|get|select|union)(\+|%2b))" 36;
    "~*(union)(.*)(select)(.*)(\(|%28)" 37;
    "~*(concat)(.*)(\(|%28)" 38;	
  }
  map $request_uri $bad_request_7g {	
    default 0;	
    "~*([a-z0-9]{2000,})" 1;
    "~*(=?\\\(\'|%27)/?)(\.)" 2;
    "~*(\^|`|<|>|%|\\|\{|\}|\|)" 3;
    "~*(/)(\*|\"|\'|\.|,|&|&amp;?)/?$" 4;
    "~*(\.)(php)(\()?([0-9]+)(\))?(/)?$" 5;
    "~*(/)(vbulletin|boards|vbforum)(/)?" 6;
    "~*(/)(ckfinder|fck|fckeditor|fullclick)" 7;
    "~*(\.(s?ftp-?)config|(s?ftp-?)config\.)" 8;
    "~*(\{0\}|\"?0\"?=\"?0|\(/\(|\.\.\.|\+\+\+|\\\")" 9;
    "~*(thumbs?(_editor|open)?|tim(thumbs?)?)(\.php)" 10;
    "~*(\.|20)(get|the)(_)(permalink|posts_page_url)(\()" 11;
    "~*(///|\?\?|/&&|/\*(.*)\*/|/:/|\\\\|0x00|%00|%0d%0a)" 12;
    "~*(/%7e)(root|ftp|bin|nobody|named|guest|logs|sshd)(/)" 13;
    "~*(/)(etc|var)(/)(hidden|secret|shadow|ninja|passwd|tmp)(/)?$" 14;
    "~*(s)?(ftp|http|inurl|php)(s)?(:(/|%2f|%u2215)(/|%2f|%u2215))" 15;
    "~*(/)(=|\$&?|&?(pws|rk)=0|_mm|_vti_|cgi(\.|-)?|(=|/|;|,)nt\.)" 16;
    "~*(\.)(ds_store|htaccess|htpasswd|init?|mysql-select-db)(/)?$" 17;
    "~*(/)(bin)(/)(cc|chmod|chsh|cpp|echo|id|kill|mail|nasm|perl|ping|ps|python|tclsh)(/)?$" 18;
    "~*(/)(::[0-9999]|%3a%3a[0-9999]|127\.0\.0\.1|localhost|loopback|makefile|pingserver|wwwroot)(/)?" 19;
    "~*(\(null\)|\{\$itemURL\}|cAsT\(0x|echo(.*)kae|etc/passwd|eval\(|self/environ|\+union\+all\+select)" 20;
    "~*(/)(awstats|(c99|php|web)shell|document_root|error_log|listinfo|muieblack|remoteview|site((.){0,2})copier|sqlpatch|sux0r)" 21;
    "~*(/)((php|web)?shell|crossdomain|fileditor|locus7|nstview|php(get|remoteview|writer)|r57|remview|sshphp|storm7|webadmin)(.*)(\.|\()" 22;
    "~*(/)(author-panel|bitrix|class|database|(db|mysql)-?admin|filemanager|htdocs|httpdocs|https?|mailman|mailto|msoffice|mysql|_?php-my-admin(.*)|tmp|undefined|usage|var|vhosts|webmaster|www)(/)" 23;
    "~*(\.)(7z|ab4|ace|afm|ashx|aspx?|bash|ba?k?|bin|bz2|cfg|cfml?|cgi|conf\b|config|ctl|dat|db|dist|dll|eml|engine|env|et2|exe|fec|fla|git|gz|hg|inc|ini|inv|jsp|log|lqd|make|mbf|mdb|mmw|mny|module|old|one|orig|out|passwd|pdb|phtml|pl|profile|psd|pst|ptdb|pwd|py|qbb|qdf|rar|rdf|save|sdb|sql|sh|soa|svn|swf|swl|swo|swp|stx|tar|tax|tgz|theme|tls|tmd|wow|xtmpl|ya?ml|zlib)$" 24;
    "~*(base64_(en|de)code|benchmark|child_terminate|curl_exec|e?chr|eval|function|fwrite|(f|p)open|html|leak|passthru|p?fsockopen|phpinfo|posix_(kill|mkfifo|setpgid|setsid|setuid)|proc_(close|get_status|nice|open|terminate)|(shell_)?exec|system)(.*)(\()(.*)(\))" 25;
    "~*(/)(^$|00.temp00|0day|3index|3xp|70bex?|admin_events|bkht|(php|web)?shell|c99|config(\.)?bak|curltest|db|dompdf|filenetworks|hmei7|index\.php/index\.php/index|jahat|kcrew|keywordspy|libsoft|marg|mobiquo|mysql|nessus|php-?info|racrew|sql|vuln|webconfig|(wp-)?conf(ig)?(uration)?|xertive)(\.php)" 26;
  }
  map $http_user_agent $bad_bot_7g {	
    default 0;	
    "~*([a-z0-9]{2000,})" 1;
    "~*(&lt;|%0a|%0d|%27|%3c|%3e|%00|0x00)" 2;
    "~*(ahrefs|alexibot|majestic|mj12bot|rogerbot)" 3;
    "~*((c99|php|web)shell|remoteview|site((.){0,2})copier)" 4;
    "~*(econtext|eolasbot|eventures|liebaofast|nominet|oppo\sa33)" 5;
    "~*(base64_decode|bin/bash|disconnect|eval|lwp-download|unserialize|\\\x22)" 6;
    "~*(acapbot|acoonbot|asterias|attackbot|backdorbot|becomebot|binlar|blackwidow|blekkobot|blexbot|blowfish|bullseye|bunnys|butterfly|careerbot|casper|checkpriv|cheesebot|cherrypick|chinaclaw|choppy|clshttp|cmsworld|copernic|copyrightcheck|cosmos|crescent|cy_cho|datacha|demon|diavol|discobot|dittospyder|dotbot|dotnetdotcom|dumbot|emailcollector|emailsiphon|emailwolf|exabot|extract|eyenetie|feedfinder|flaming|flashget|flicky|foobot|g00g1e|getright|gigabot|go-ahead-got|gozilla|grabnet|grafula|harvest|heritrix|httrack|icarus6j|jetbot|jetcar|jikespider|kmccrew|leechftp|libweb|linkextractor|linkscan|linkwalker|loader|masscan|miner|mechanize|morfeus|moveoverbot|netmechanic|netspider|nicerspro|nikto|ninja|nutch|octopus|pagegrabber|petalbot|planetwork|postrank|proximic|purebot|pycurl|python|queryn|queryseeker|radian6|radiation|realdownload|scooter|seekerspider|semalt|siclab|sindice|sistrix|sitebot|siteexplorer|sitesnagger|skygrid|smartdownload|snoopy|sosospider|spankbot|spbot|sqlmap|stackrambler|stripper|sucker|surftbot|sux0r|suzukacz|suzuran|takeout|teleport|telesoft|true_robots|turingos|turnit|vampire|vikspider|voideye|webleacher|webreaper|webstripper|webvac|webviewer|webwhacker|winhttp|wwwoffle|woxbot|xaldon|xxxyy|yamanalab|yioopbot|youda|zeus|zmeu|zune|zyborg)" 7;
  }
  map $http_referer $bad_referer_7g {	
    default 0;	
    "~*(semalt.com|todaperfeita)" 1;
    "~*(order(\s|%20)by(\s|%20)1--)" 2;
    "~*(blue\spill|cocaine|ejaculat|erectile|erections|hoodia|huronriveracres|impotence|levitra|libido|lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby|ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)" 3;	
  }
  map $request_method $not_allowed_method_7g {	
    default 0;	
    "~*^(connect)" 1;
    "~*^(debug)" 2;
    "~*^(move)" 3;
    "~*^(trace)" 4;
    "~*^(track)" 5;	
  }


  index index.php;


  # Force www by redirecting non-www to www (reverse this, if you want it the other way around) (remove this server block, if you are working with a sub-domain)
  server {
    # Put your domain here (mind it has no wwww)
    server_name YOURDOMAIN.com;
    listen 443 ssl http2;
    listen [::]:443 ssl http2 ipv6only=on;
    return 301 https://www.$server_name$request_uri;
  }


  server {
    # Put your domain here (mind the www here)
    server_name www.YOURDOMAIN.com;
    # We only go for port 443 with SSL here. Mind that we also use HTTP2 - if this is not available, remove it.
    listen 443 ssl http2;
    listen [::]:443 ssl http2 ipv6only=on;
    # Define your application root here:
    root /home/site/wwwroot/public;


    # 7G FIREWALL - NGINX v1.4
    # @ https://perishablepress.com/7g-firewall/
    # @ https://perishablepress.com/7g-firewall-nginx/
    set $7g_reason "";
    set $7g_drop_bad_bot 0;
    set $7g_drop_bad_referer 0;
    set $7g_drop_bad_query_string 0;
    set $7g_drop_bad_request 0;
    set $7g_drop_bad_method 0;
    set $7g_drop 0;
    if ($bad_bot_7g) {
      set $7g_reason "${7g_reason}:bad_bot_${bad_bot_7g}:"; 
      set $7g_drop_bad_bot 1;
    }
    if ($bad_referer_7g) { 
      set $7g_reason "${7g_reason}:bad_referer_${bad_referer_7g}:"; 
      set $7g_drop_bad_referer 1;
    }
    if ($bad_querystring_7g) {
      set $7g_reason "${7g_reason}:bad_querystring_${bad_querystring_7g}:"; 
      set $7g_drop_bad_query_string 1;
    }
    if ($bad_request_7g) {
      set $7g_reason "${7g_reason}:bad_request_${bad_request_7g}:"; 
      set $7g_drop_bad_request 1;
    }
    if ($not_allowed_method_7g) {
      set $7g_reason "${7g_reason}:not_allowed_method_${not_allowed_method_7g}:"; 
      set $7g_drop_bad_method 2;
    }
    if ($7g_drop_bad_bot) {
      set $args "${7g_reason}";
      set $7g_drop 1;
    }
    if ($7g_drop_bad_referer) {
      set $args "${7g_reason}";
      set $7g_drop 1;
    }
    if ($7g_drop_bad_query_string) {
      set $args "${7g_reason}";
      set $7g_drop 1;
    }
    if ($7g_drop_bad_request) {
      set $args "${7g_reason}";
      set $7g_drop 1;
    }
    if ($7g_drop_bad_method) {
      set $args "${7g_reason}";
      set $7g_drop 2;
    }
    if ($7g_drop = 1) {
      return 403;
    }
    if ($7g_drop = 2) {
      return 405;
    }


    # Security Headers
    # For testing and more details, see https://securityheaders.com/ .
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection '1; mode=block';
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
    add_header Referrer-Policy no-referrer-when-downgrad;
    # Uses your domain from the server_name above here (or your wildcard *, if you experience any problems)
    add_header Access-Control-Allow-Origin 'https://'$server_name;
    # Adjust to your needs. GET should be enough for simple landingpages. Sometimes, you might need 'GET, POST'.
    add_header Access-Control-Allow-Methods 'GET, POST';
    # Be careful here. Enabling it limits you on what third-party tools you can include on your page. The provided configuration is only an example.
    add_header set Content-Security-Policy 'default-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.youtube-nocookie.com https://www.googletagmanager.com https://tagmanager.google.com https://www.google-analytics.com https://stats.g.doubleclick.net https://cookiehub.net data:; img-src 'self' https://www.gstatic.com https://ssl.gstatic.com https://i.ytimg.com https://stats.g.doubleclick.net https://www.google-analytics.com data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://tagmanager.google.com https://www.googletagmanager.com https://www.google-analytics.com https://cookiehub.net';
    # Usually, you would not need any special browser features, so keep them set to 'none'. Some none intrusive things might be helpful for services like YouTube.
    add_header Permissions-Policy "geolocation 'none'; midi 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope *; accelerometer *; encrypted-media *; usb 'none'; payment 'none'";
    # The next 2 lines aim to hide the PHP version.
    fastcgi_hide_header X-Powered-By;
    fastcgi_hide_header X-CF-Powered-By;


    # Hide server identity and prevent directory listing
    autoindex off;
    server_tokens off;


    # Restrict access to .git
    location ~ /\.git { deny all; }


    # Restrict access to .htaccess and .htpasswd and nginx conf
    location = /my.conf { deny all; }
    location = /.htaccess { deny all; }
    location = /.htpasswd { deny all; }
    

    # Block XML-RPC if existent
    location = /xmlrpc.php { deny all; }


    # Restrict Hotlinking for the /assets/images folder, but not the social_media.png and other_open_sample.jpg files
    location ~ /assets/images/(?:(?!.*(social_media\.png|other_open_sample\.jpg)).)*$ {
      valid_referers none blocked $server_name;
      if ($invalid_referer) {
        return 403;
      }
    }


    # Caching
    location ~* \.(ico|pdf|flv|swf|gif|png|jpg|jpeg|txt|svg|webmanifest|webp)$ {
      expires 30d;
      add_header Pragma "public";
      add_header Cache-Control "public";
    }
    location ~* \.(woff|woff2|eot|ttf|js|css|min.js|min.css)$ {
      expires 365d;
      add_header Pragma "public";
      add_header Cache-Control "public";
    }


    # Compression / Vary Accept-Encoding
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types text/plain text/html text/xml text/css text/vtt text/x-component application/xml application/xhtml+xml application/rss+xml application/js application/javascript application/x-javascript application/x-httpd-php application/x-httpd-fastphp application/atom+xml application/json application/ld+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/webmanifest+json font/opentype image/svg+xml image/x-icon;
    gzip_proxied no-cache no-store private expired auth;


    # Disable ETags
    etag off;
    

    ## MAIN REWRITE ##
	location / {
        # Force a trailing slash and route through index.php.
        rewrite ^([^.]*[^/])$ $1/ permanent;
        try_files $uri $uri/ /index.php?$args;
    }
    ## END MAIN REWRITE ##


    # PHP handling
    location ~ \.php$ {
      try_files $uri =404;
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      include fastcgi_params;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_read_timeout 400;
      fastcgi_keep_conn on;
      fastcgi_buffers 256 16k;
      fastcgi_buffer_size 128k;
      fastcgi_busy_buffers_size 256k;
      # Mind that path here:
      fastcgi_pass 127.0.0.1:9000;
    }    
  }


  # Force HTTPS via redirecting port 80
  server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }


}
